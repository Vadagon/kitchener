{"version":3,"file":"popup.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNqB;;AAErB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,wBAAwB;AACzD;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;;AAGA;AACA,iCAAiC,wBAAwB;AACzD;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD,8BAA8B,QAAQ,sBAAsB,UAAU;AACtE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,SAAS;;AAET;;AAEA;AACA,mCAAmC,mCAAmC;AACtE,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,mCAAmC;AAChE,UAAU;AACV,6BAA6B,0CAA0C;AACvE,UAAU;AACV,6BAA6B,+CAA+C;AAC5E,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C,wCAAwC,YAAY;AACpD,iCAAiC,cAAc;AAC/C;AACA;AACA,OAAO;AACP;AACA;;AAEA,CAAC,E","sources":["webpack://kitchener/./src/popup.css","webpack://kitchener/webpack/bootstrap","webpack://kitchener/webpack/runtime/make namespace object","webpack://kitchener/./src/popup.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './popup.css';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const authenticateBtn = document.getElementById('authenticateBtn');\n  const settingsBtn = document.getElementById('settingsBtn');\n  const settingPage = document.querySelector('.settingpage');\n  const mainPage = document.querySelector('.mainpage');\n\n  settingsBtn.addEventListener('click', () => {\n    settingButtonClick();\n  });\n  var settingButtonClick = () => {\n    settingPage.classList.toggle('active');\n    mainPage.classList.toggle('active');\n  };\n\n  authenticateBtn.addEventListener('click', () => {\n    chrome.runtime.sendMessage({ action: 'authenticate' }, (response) => {\n      if (response.error) {\n        console.error('Authentication Error:', response.error);\n      } else {\n        console.log('Authenticated successfully');\n      }\n    });\n  });\n\n  getBasesList();\n  getLastError();\n  getLastCapturedRecords();\n\n\n  function getBasesList() {\n    chrome.runtime.sendMessage({ action: 'getBasesList' }, (response) => {\n      if (response.error) {\n        console.error('Error fetching bases list:', response.error);\n      } else {\n        displayBases(response.bases);\n        const selectBoxes = document.querySelectorAll('.select-box');\n        if (selectBoxes.length > 0) {\n          selectBoxes[0].checked = true;\n        }\n      }\n    });\n  }\n\n  function displayBases(bases) {\n    console.log(12321)\n    const squaresDiv = document.querySelector('.squares');\n    bases.forEach(base => {\n      const baseDiv = document.createElement('div');\n      baseDiv.className = 'square';\n      baseDiv.innerHTML = `\n      <input type=\"checkbox\" id=\"selectBox-${base.id}\" class=\"select-box\">\n      <label for=\"selectBox-${base.id}\" class=\"base-name\">${base.name}</label>\n    `;\n      squaresDiv.appendChild(baseDiv);\n    });\n    if (bases.length) {\n      settingButtonClick();\n    }\n  }\n\n  function getLastError() {\n    chrome.storage.local.get('error', (result) => {\n      if (result.error) {\n        console.error('Last Error:', result.error);\n        const errorDiv = document.getElementById('error');\n        errorDiv.innerText = result.error;\n        chrome.storage.local.remove('error');\n      }\n    });\n  }\n\n  function getLastCapturedRecords() {\n    chrome.storage.local.get('lastCapturedRecords', (result) => {\n      console.log('result', result);\n      if (result.lastCapturedRecords) {\n        const now = new Date();\n        const validRecords = result.lastCapturedRecords.filter(record => {\n          console.log('sdsds', record.dateAdded)\n          const recordDate = new Date(record.dateAdded);\n          return (now - recordDate) < 24 * 60 * 60 * 1000; // 24 hours in milliseconds\n        });\n\n        displayCapturedRecords(validRecords);\n\n        // Update local storage with valid records only\n        chrome.storage.local.set({ lastCapturedRecords: validRecords });\n      }else{\n        displayCapturedRecords([])\n      }\n    });\n  }\n\n  function displayCapturedRecords(records) {\n    const recordsDiv = document.querySelector('.records');\n    recordsDiv.innerHTML = ''; // Clear previous records\n    console.log('records', records)\n    if (records.length === 0) {\n      const noRecordsDiv = document.createElement('div');\n      noRecordsDiv.className = 'no-records';\n      noRecordsDiv.innerText = 'There are no updated orders yet';\n      noRecordsDiv.style.textAlign = 'center';\n      recordsDiv.appendChild(noRecordsDiv);\n    } else {\n      records.sort((a, b) => new Date(b.dateAdded) - new Date(a.dateAdded)).forEach(record => {\n        const recordDiv = document.createElement('div');\n        recordDiv.className = 'record';\n        const recordDate = new Date(record.dateAdded);\n        const now = new Date();\n        const timeDifference = now - recordDate;\n        let humanizedDate;\n\n        if (timeDifference < 60 * 1000) {\n          humanizedDate = `${Math.floor(timeDifference / 1000)} seconds ago`;\n        } else if (timeDifference < 60 * 60 * 1000) {\n          humanizedDate = `${Math.floor(timeDifference / (60 * 1000))} minutes ago`;\n        } else if (timeDifference < 24 * 60 * 60 * 1000) {\n          humanizedDate = `${Math.floor(timeDifference / (60 * 60 * 1000))} hours ago`;\n        } else {\n          humanizedDate = recordDate.toLocaleString();\n        }\n        const bookingId = Array.isArray(record.Booking_ID) && record.Booking_ID.length > 0 ? record.Booking_ID[0] : record.Booking_ID['Order ID'];\n        const description = record['Order Description'] ?? record['Special Requests'];\n        recordDiv.innerHTML = `\n        <p class=\"record-title\">${bookingId}</p>\n        <p class=\"record-description\">${description}</p>\n        <p class=\"record-date\">${humanizedDate}</p>\n      `;\n        recordsDiv.appendChild(recordDiv);\n      });\n    }\n  }\n\n});"],"names":[],"sourceRoot":""}